>>> Usage hints:

- For maxmimum performance start accessing attributes at lowest level e.g. for filtering:
	# This will lazy parse only needed layers behind the scenes
	if ether.src == "...":
		...
	elif ip.src == "...":
		...
	elif tcp.sport == "...":
		...

- For even more performance disable checksum calculation on packet creation. This doesn't affect parsing from raw bytes.
	pkt = ip.IP(src_s="1.2.3.4", dst_s="1.2.3.5") + tcp.TCP()
	pkt.sum_au_active = False
	pkt.tcp.sum_au_active = False
	bts = pkt.bin()

- Enlarge receive/send buffers to get max performance. This can be done using the following commands
	(taken from: http://www.cyberciti.biz/faq/linux-tcp-tuning/)

This has to be appended to /etc/sysctl.conf:

net.core.rmem_max	= 12582912
net.core.rmem_default	= 12582912
net.core.wmem_max	= 12582912
net.core.wmem_default	= 12582912
net.core.optmem_max	= 2048000
net.core.netdev_max_backlog = 5000
net.unix.max_dgram_qlen	= 1000
net.ipv4.tcp_rmem	= 10240 87380 12582912
net.ipv4.tcp_wmem	= 10240 87380 12582912
net.ipv4.tcp_mem	= 21228 87380 12582912
net.ipv4.udp_mem	= 21228 87380 12582912
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack	= 1

reload settings:
sysctl -p

check values:
sysctl -a

- Assemblation of TCP/UDP streams can be done by tshark using pipes
	with "-i -" and "-z follow,prot,mode,filter[,range]"
